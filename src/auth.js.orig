'use strict'
var fetch = require('whatwg-fetch'),
  URL = require('url'),
  jwtDecode = require('jwt-decode'),
  helper = require('./common/response-handlers')

var authUrl = function(host) {
  return URL.resolve(host, 'auth/')
}

var _login = function(credentials) {
  this.credentials = credentials || this.credentials
  var url = URL.resolve(authUrl(this.host), 'login'),
    options = { 
      method: 'POST', 
      headers: { 'content-type': 'application/json'},
      body: JSON.stringify(this.credentials)
    }

<<<<<<< HEAD
	var self = this
	return fetch(url, options)
		.then(helper.checkStatus)
		.then(helper.parseJSON)
		.then(function(json) {
			self.token = json
			self.tenantId = jwtDecode(json.auth_token).app_metadata.tenantId
			return json
		})
=======
  var self = this
  return fetch(url, options)
    .then(helper.checkStatus)
    .then(helper.parseJSON)
    .then(function(json) {
      self.token = json
      self.tenantId = jwtDecode(json.auth_token).app_metadata.tenantId
      return json
    })
    .catch(helper.handleError)
>>>>>>> fix some styling and test browser version
}

var _setPassword = function (credentials) {
  var url = URL.resolve(authUrl(this.host), 'setpassword'),
    options = { 
      method: 'PUT', 
      headers: { 'content-type': 'application/json'},
      body: JSON.stringify(credentials)
    }

<<<<<<< HEAD
	return fetch(url, options)
		.then(helper.checkStatus)
		.then(helper.parseJSON)
=======
  return fetch(url, options)
    .then(helper.checkStatus)
    .then(helper.parseJSON)
    .catch(helper.handleError)
>>>>>>> fix some styling and test browser version
}

module.exports = function(connection) {
  return {
    login: _login.bind(connection),
    setPassword: _setPassword.bind(connection)
  }
}